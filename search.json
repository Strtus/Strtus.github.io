[{"title":"文献阅读笔记：A Real-to-Sim-to-Real Approach for Robust Manipulation","date":"2025-02-10T13:50:14.000Z","url":"/2025/02/10/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0%EF%BC%9AA-Real-to-Sim-to-Real-Approach-for-Robust-Manipulation/","tags":[["文献阅读","/tags/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB/"]],"categories":[[" ",""]],"content":"Reconciling Reality through Simulation: A Real-to-Sim-to-Real Approach for Robust Manipulation论文地址： 作者单位：Massachusetts Institute of Technology；University of Washington；TU Darmstadt 一. Task, Why, HowTask:开发一种系统，使机器人能够在模拟环境中通过强化学习，提升其在现实世界中执行操纵任务的鲁棒性 why:传统的Imitation learning需要大量的人类监督，才能学习对物体姿态变化、物理干扰和视觉干扰具有鲁棒性的策略。 而RL虽然可以自主探索环境以学习鲁棒行为，但可能需要大量不安全的现实世界数据收集。 因此，需要一种方法，在不依赖大量人类监督或不安全的数据收集的情况下，学习高性能且鲁棒的策略 **How: **Real-to-Sim：使用现实世界的数据优化模拟环境，使其更接近真实物理环境。 Sim-to-Real：在改进后的模拟环境中进行策略训练，利用数据增强、随机扰动等方法提升鲁棒性。 Real Evaluation：将训练好的策略部署回现实环境，并进行实验评估，与基准方法对比，验证其在不同任务和环境下的有效性。 二. 逻辑链1.Motivation作者为什么做这件事？之前存在什么问题？ IL通过专家演示数据学习策略。然而，除非能够收集大量多样化的演示数据，否则基于模仿学习训练的控制器通常缺乏足够的鲁棒性。此外，由于模仿学习仅依赖于示范数据，它无法自主学习如何从错误或分布外扰动中恢复，除非这些情况在演示数据中被明确覆盖。因此，传统的模仿学习方法难以直接应用于现实世界中需要广泛适应性和稳健性的任务部署。 RL通过自主探索环境来学习稳健的行为，使机器人能够在自收集的数据上进行训练，从而减少对人工数据收集的依赖，并发现一系列预定义演示未涵盖的行为，例如物体掉落后的重新抓取、夹持器内物体移动时的重新对齐以及对外部扰动的自适应调整。然而，在现实世界中直接训练RL策略存在诸多挑战：学习过程通常较慢，可能涉及不安全的数据收集，同时，由于环境重置成本高、奖励设计复杂等问题，训练过程往往难以高效实施。因此，在大多数情况下，直接使用RL在现实环境中学习鲁棒控制策略并不现实。 模拟环境提供了一种廉价、高效、安全且可控的方式来大规模收集训练数据。然而，在诸如家庭机器人操作等应用场景下，手动构建几何、视觉和物理特性高度逼真的模拟环境需要大量时间和人力投入，这使得其在大规模应用中难以成为可行的替代方案。 2.Novelty创新点在哪里？ 作者提出了RialTo, 通过digital twin从少量现实世界数据中动态构建的强化学习，来增强现实世界模仿学习策略的系统而无需大量数据收集或广泛的人类监督 3.Method1）Real-to-Sim-to-Real (R2S2R)k： 传统的 sim-to-real 方法通常仅依赖于模拟环境进行训练，而该研究提出了一种**现实到模拟再到现实（Real-to-Sim-to-Real, R2S2R）**的方法，先利用现实数据优化模拟环境，再在模拟中强化学习，最终将策略迁移回现实世界。相比于传统方法，这种框架能够更有效地减少 sim-to-real gap，提高策略的泛化能力和鲁棒性。 2）基于digital twin的高保真环境构建： 提出了一个自动化的digital twin环境构建方法，能够快速重建现实世界的几何、视觉和物理特性，使得模拟环境更接近真实场景。相比于手动建模，该方法大幅降低了构建高保真仿真环境的成本，并提升了仿真的物理精确性。 3）Reverse Distillation： 传统的强化学习通常从头开始训练，而该研究提出了一种逆向蒸馏（Reverse Distillation）方法，将现实世界的专家演示映射到模拟环境中，并利用这些数据微调强化学习策略，使其能够更有效地学习鲁棒的行为。这种方法减少了对大量现实数据的需求，同时提高了模拟训练的有效性。 4.Experiments1.Task SetupBook Placing：要求机器人在不同的初始条件和环境变化下，将书籍精准放置到目标位置。 Tray Organization：机器人需要在干扰因素（如物体姿态变化、视觉干扰等）存在的情况下，将多个物品整齐摆放到托盘中。 Pick and Place：测试机器人在不同物体、表面材质和环境光照条件下的操作稳定性。 2.Evaluation MetricsTask Success Rate Robustness Data Efficiency：在有限的现实数据下，所提出的方法相较于基线方法的学习效率 3.Baseline ComparisonsImitation Learning：直接从专家演示数据学习策略，不进行额外训练 Baseline Sim-to-Real：在标准仿真环境中训练策略，然后直接部署到现实世界 无逆向蒸馏的 R2S2R：去除逆向蒸馏步骤，分析其对最终性能的影响 5.ThinkingAdvantages有效缩小 Sim-to-Real Gap：通过构建高保真的数字孪生环境，该方法使模拟训练的策略能够更好地泛化到现实世界，避免了传统 Sim-to-Real 方法因仿真不精准而导致的性能下降。 提高数据利用率：通过逆向蒸馏（Reverse Distillation），R2S2R 能够最大化利用有限的现实世界数据，并在模拟环境中进一步优化策略，提高数据效率。 增强策略鲁棒性：相比于传统的模仿学习，该方法能够让策略自主探索环境，学习如何从错误中恢复，提高了对外部干扰（如物体滑落、意外碰撞等）的适应能力。 Limitations数字孪生环境构建成本：相较于端到端模仿学习可能增加前期工作量。 只适用于特定任务：在更复杂的非结构化环境，效度有待考证 三. 精读1. Abstract模仿学习方法需要大量的人工监督来学习对物体姿态、物理干扰和视觉干扰物变化具有鲁棒性的策略。另一方面，强化学习可以自主探索环境以学习稳健的行为，但可能需要不切实际的不安全现实世界数据收集。为了学习性能、稳健的策略，而不会负担不安全的现实世界数据收集或广泛的人类监督，我们提出了 RialTo，这是一种通过在从少量现实世界数据动态构建的“数字孪生”模拟环境中使用强化学习来鲁棒现实世界模仿学习策略的系统。为了实现这个真实的管道，RialTo 提出了一个易于使用的界面，用于快速扫描和构建现实世界环境的数字孪生。我们还引入了一种新的“逆蒸馏”程序，将现实世界的演示带入模拟环境中，以实现高效的微调，只需要最少的人工干预和工程。我们在现实世界中的各种机器人操作问题中评估 RialTo，例如在机架上稳健地堆叠培养皿，将书籍放在货架上，以及另外六个任务。在不需要广泛的人类数据收集的情况下，RialTo 在策略鲁棒性上增加（超过 67%） 2. Introduction想象一下，一个机器人可以通过把盘子放在碗架上来整理厨房。考虑可能遇到的所有环境变化：不同的板材配置或机架位置的变化，运输过程中板材意外滑入夹具，以及视觉干扰，包括杂乱和照明变化。为了使机器人有效，它必须在各种场景和物体扰动下稳健地解决任务，而不会对瞬态场景扰动变得脆弱。一个框架，使人类能够轻松地对机器人进行编程，使其在这些变化或干扰下稳健地完成任务。为了成为可扩展的部署选择，该框架不应做出特定于任务的假设，必须无缝应用于许多任务。 为了设计这些类型的鲁棒机器人控制器，可以尝试在大量场景和高度可变的对象中训练策略 12,21 。这很难为机器人学习提供可扩展的解决方案，原因有两个：（1）在大规模场景中实际收集或合成数据具有挑战性，因为在模拟中创建内容可能具有挑战性，并且数据收集对于现实世界可能具有挑战性，（2）一个广泛通用的、健壮的策略可能过于保守，降低了其在部署中遇到的特定目标域上的性能。或者，我们建议最大限度地利用特定用户，机器人在特定家庭环境中取得高成功更为关键，显示出对此设置中可能遇到的各种局部干扰和干扰的鲁棒性。考虑到这一点，我们的目标是开发一种机器人学习技术，该技术需要最少的人力来合成视觉运动操纵控制器，这对于部署环境中的任务性能非常稳健。问题变成了 - 我们如何获得这些鲁棒控制器，而无需对数据收集或模拟工程进行大量努力？ &gt; 模仿学习(Imitation learning) 从专家演示数据中学习，然而，除非收集大量演示，否则通过模仿学习学习的控制器往往会表现出有限的鲁棒性。此外，除非有意演示此类行为，否则模仿学习不会学会从错误或分布外干扰中恢复。这使得直接模仿学习算法不适合现实场景中的广泛、健壮的部署。 &gt; 强化学习( Reinforcement learning) 可以自主探索环境已学习稳健的行为，允许机器人在自收集的数据上进行训练，减少人类对大量数据收集的负担，并发现一组预先收集的演示(例如，当对象被丢弃时重新抓取，当对象在夹持器中移动时重新对齐，调整外部扰动等)。然而，在现实世界中直接执行 RL 的速度很慢，通常会导致不安全的数据收集，并且由于重置和奖励规范等问题具有挑战性。因此，目前，在许多情况下使用 RL 直接学习现实世界中的鲁棒控制策略是不切实际的。 &gt; 模拟提供了广泛、廉价、安全和特权信息收集大量数据的能力。对于家庭机器人操作等问题，手动构建几何、视觉和物理上逼真的模拟环境可能是时间和劳动密集型的，这使得它在规模上是不切实际的替代方案。 为了安全有效地学习鲁棒的操纵行为，我们的关键见解是在快速构建的仿真场景中训练RL控制器。通过利用目标部署域中的视频，我们可以获得具有精确几何形状和清晰度的场景，这些场景反映了现实世界的外观和运动学。这些“域内”仿真环境可以作为一个沙箱，安全快速地学习各种干扰和干扰因素下的稳健策略，而不需要在现实世界中进行昂贵的探索。我们展示了如何通过在这些构建的仿真环境中进行大规模的RL微调，在环境设计和奖励工程方面使用最少的人力，来强化用少量真实世界演示训练的模仿学习策略。为了减轻奖励工程的负担，我们利用了一组真实世界的 demonstration，通过强化学习引导高效的微调。这些真实世界的演示有助于缩小模拟到真实的差距，并提高我们策略的性能，如第IV-B节所示。然而，将真实世界的展示转化为模拟并非易事，因为我们无法访问环境的拉格朗日状态（例如对象姿态）。因此，我们提出了一种新的“逆蒸馏”技术，可以将真实世界的演示转移到模拟中。在构建的仿真环境中使用RL对真实世界的模仿学习策略进行鲁棒化后，可以将微调后的策略转移回现实世界，显著提高成功率和对测试时间干扰的鲁棒性。 总体而言，我们的 pipline 同时提高了强化学习和模仿学习的有效性。模拟中的强化学习有助于使模仿学习策略的部署准备就绪，而不需要在现实世界中进行大量不安全的交互式数据收集。同时，通过逆蒸馏从真实世界的演示数据中引导，使探索问题易于在模拟中进行RL微调。这最大限度地减少了算法设计者所需的特定任务工程量，例如设计密集奖励或手动设计场景。具体来说，我们提出了RialTo，这是一个无需大量人力即可对真实世界的模仿学习策略进行鲁棒化的系统，通过动态构建真实世界环境的逼真模拟类似物，并将其用于鲁棒的策略学习。 主要贡献：- 一个简单的策略学习pipline，它合成控制器在现实世界中执行不同的操作任务，(i)减少人类在构建环境和指定奖励方面的努力，(ii)产生健壮的策略，转移到现实世界的杂乱场景，显示出对干扰和干扰物的鲁棒性，(iii)需要在现实世界中最少数量的昂贵和不安全的数据收集。 - 一种新的算法，将demonstration 从现实世界转移到重建模拟，从低级拉格朗日状态引导有效的强化学习，用于策略微调。我们表明，这种真实的人类演示转移既提高了模拟现实行为的效率，又提高了策略，有效地转移到现实世界。 - 一个直观的图形界面，用于快速扫描和构建具有关节、分离对象和精确几何形状的真实世界场景的“数字孪生”。 - 我们提供了广泛的实验评估，表明RialTo产生反应策略，在物理干扰和视觉干扰下解决现实世界场景中的几个操作任务。在八个不同的任务中，我们的pipline 在不同对象姿势、视觉干扰物和物理扰动的情况下，平均成功率比基线提高了 67%。 3. RialTo: A Real-to-Sim-to-Real System for robust robotic manipulation3.1 A. System Overview我们的目标是获得一个控制策略，将现实世界的感官观察映射到机器人动作。我们只假设访问一小组演示(~ 15)，其中包含专家收集的(观察、动作)轨迹，尽管原则上RialTo也可以用来鲁棒大型、富有表现力的预训练模型。我们的方法使用基于模拟的 RL 对真实世界的模仿学习策略具有鲁棒性，以使学习的控制器对演示中不存在的干扰和干扰具有鲁棒性。所提出的 RialTo pipline 以四个主要步骤实现这一点: - 我们从真实世界的图像捕获中构造几何、视觉和运动学准确的仿真环境。我们利用 3D 重建工具并开发了一个易于使用的图形用户界面，用于添加关节和物理属性。 - 在模拟中，我们获得了一组包含特权信息(如拉格朗日状态，如物体和关节姿态)的成功轨迹。我们提出了一种“逆蒸馏”算法，将从真实世界的演示中学习到的策略转移到在模拟环境中创建轨迹数据集(即演示)。 - 合成的模拟演示使用易于设计的稀疏奖励函数和低维状态空间在模拟中使用 RL 引导有效的微调，并添加随机化以使策略对环境变化具有鲁棒性。 - 通过将基于状态的仿真策略提炼为从现实世界中可用的原始传感器观测运行的策略，将学习到的策略转移到现实。在蒸馏过程中，我们还与原始的真实演示联合训练，以利用基于模拟的稳健化和域内真实世界数据的综合好处。 3.2 B. Real-to-Sim Transfer for Scalable Scene GenerationRialTo的第一步是为 policy training 构建几何、视觉和运动学上逼真的模拟场景。这需要（i）从真实世界的图像中生成精确的纹理3D几何体，以及（ii）指定关节和物理参数。对于几何重建，我们使用现有的现成三维重建技术。我们的 pipline 与所使用的特定方法无关，我们已经用各种扫描应用程序（例如Polycam 48 和ARCode 15 ）和3D重建 pipline 60,41 验证了这种方法，每一个都将一组多视图2D图像(或视频)转换为纹理的3D网格。表示 G 的 raw mash 通常导出为单个全局统一几何，不适合直接策略学习。场景对象没有分离，也没有反映具有内部关节的物体的运动学。还需要未指定质量和摩擦等物理参数。因此，我们进一步将原始网格 G 处理成一组独立的身体&#x2F;链接${G_{i}}^{M}_{i&#x3D;1}$，具有运动学关系 K 和物理参数 P。 虽然有各种自动化技术可以自动分割和向网格添加关节 29 ，但在这项工作中，我们采取了一种简单的以人为中心的方法。我们为人类提供了一个简单的图形界面，可以快速分离网格并添加关节。我们的GUI允许用户上传自己的网格，并在全局场景中拖放、重新定位和重新定向它们。然后，用户可以分离网格并在不同网格元素之间添加接缝，从而可以扫描和处理抽屉、冰箱和橱柜等对象。重要的是，我们的界面轻量级、直观，只需要最少的领域特定知识。我们进行了一项研究（第 VI 节），评估了六个非专家用户对 GUI 的经验，发现他们可以扫描复杂场景并在 15 分钟的活动交互时间下用几个铰接对象填充它们。具有相应数字双胞胎的真实环境示例如图4和图16所示。 下一个问题是-我们如何推断准确地复制现实世界的物理参数。虽然准确识别物理参数是可能的，但如果没有相当大的交互，这可能具有挑战性 5, 63 。虽然适应动态变化是未来工作的重要方向，但在该系统中，我们在对象之间均匀地设置质量和摩擦的单一默认值，并通过约束学习到的策略接近少量的现实世界演示来补偿与实际现实世界值的模拟到真实差距，如第 III-C 节所述。 此过程生成场景$S &#x3D; {G_{i}}^{M}{i&#x3D;1}, K, P$，以URDF 文件表示，该文件引用分离的网格及其各自的几何${G{i}}^{M}_{i&#x3D;1}$、运动学 (K) 和物理参数 (P)。该环境随后可用于仿真中的大规模策略鲁棒化。 3.3 C. Robustifying Real-World Imitation Learning Polices in Simulation给定第 III-B 节中生成的模拟环境，RialTo 中的下一步是在模拟中学习一个健壮的策略，可以从各种配置和环境条件下解决所需的任务。虽然这可以通过在模拟中从头开始训练策略来完成，但这通常是一个非常缓慢的过程，需要大量的手动工程。相反，我们将采用基于微调的方法，在模拟中使用强化学习来微调从现实世界收集的少量专家演示初始化的策略。 由于直接从视觉观察训练 RL 具有挑战性，理想情况下我们希望微调基于特权拉格朗日状态的模拟策略。然而，现实世界的演示无法访问环境中的低级状态信息。为了能够使用使用真实世界演示从特权状态在模拟中引导 RL 微调，我们引入了一种新的“逆蒸馏”（第 III-C1 节）过程，该程序能够以仅原始传感器观察和动作获取真实世界的演示并将它们转移到模拟演示中，并包含低级特权状态信息。然后，这些特权信息演示可用于在模拟中实例化一个有效的基于 RL 的微调程序（第 III-C2 节），以显着提高策略的鲁棒性。 1）Inverse-distillation from Real-to-sim for Privileged Policy Transfer: 我们假设人类在现实世界中提供了少量的演示$D_{real} &#x3D; {(o_1^i, a^i_1), …, (o^i_H, a^i_H)}^N_{i&#x3D;1}$，其中轨迹包含观察 o (3D 点云) 和动作 a (delta 末端执行器姿势)。考虑到基于模拟的 RL 微调在从紧凑的状态表示 31, 11 操作时效率更高且性能更高（参见第 V-C 节），我们希望使用真实世界的人类演示来避免从头开始训练 RL 的困难（参见第 V-B 节），我们希望将我们的观察动作演示从现实世界转移到模拟，从而允许从紧凑的基于状态的表示中模拟后续 RL 微调。这带来了一个挑战，因为**我们没有明确的状态估计系统，它为现实世界中的收集到的演示提供拉格朗日状态。**相反，我们引入了一个过程，称为“逆蒸馏”，用于将现实世界的演示集转换为一组轨迹，这些轨迹与特权低级状态信息配对。 给定演示$D_{real}$，我们可以通过模仿学习自然地在该数据集上训练策略 $pi_{real}(a|o)$。“反向蒸馏”涉及在模拟中执行这种基于感知的学习策略$pi_{real}(a|o)$，基于模拟传感器观测o，收集数据集$D_{sim} &#x3D;{(o^i_1, a^i_1, s^i_1), …, (o^i_H, a^i_H, s^i_H)}^M_{i&#x3D;1}$的成功轨迹，其中包含特权状态信息$ s^i_t$。这里的关键见解是，虽然当我们从模拟中的感知输入执行学习到的真实世界模仿策略时，我们无法访问真实世界演示中的拉格朗日状态，但低级特权拉格朗日状态信息可以自然地从模拟中收集，因为感知观察和拉格朗日状态之间的配对在模拟中是先验已知的。由于目标是超越现实世界的模仿策略$pi_{real}(a|o)$，我们可以执行 RL 微调，将特权演示数据集$D_{sim}$合并到训练过程中，如下所述。"},{"title":"基于Ollama框架本地部署DeepSeek","date":"2025-01-31T12:57:39.000Z","url":"/2025/01/31/%E5%9F%BA%E4%BA%8EOllama%E6%A1%86%E6%9E%B6%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2DeepSeek/","tags":[["教程","/tags/%E6%95%99%E7%A8%8B/"]],"categories":[[" ",""]],"content":"前言因为这几天访问DeepSeek的时候总是遇到服务繁忙，加上蒸馏后参数量大大减小，已经可以部署在本地了 这篇文章记录了我部署的过程，如果你也希望本地使用DeepSeek，希望它能够帮到你😉 ok那我们开始吧 前期准备检查显存大小对于Win用户在powershell中输入如下命令： 会得到类似的output 可以看到我的显存是8188MB 请记住你的显存大小，这是我们选择模型参数量大小的重要参考因素 对于MacOS用户在[设置-关于本机]界面，查看搭载的芯片组型号 如果是M系列芯片，由于引入了统一内存架构，内存即为显存，可以看到我的内存是8GB 如果是Intel架构的芯片，则本教程不适用，因为装不上Ollama框架 安装Ollama框架访问Ollama 官网 ，根据你的操作系统选择对应的安装包进行下载。 因为服务器在国外，下载速度会很慢，可尝试如下方案： 1.启动多线程下载 在chrome的地址栏输入如下命令： 使Parallel downloading的状态为Enable 启动前： 启动后： 2.选择合适的科学上网节点 部分美国节点配合多线程下载可以跑到25MB&#x2F;s，Amazing！ 下载完成后，会默认安装至C盘，约占用10G空间 为了验证Ollama成功安装，在PowerShell中输入如下命令： 如果安装正确，会输出Ollama的版本号，如下图所示 模型部署选择模型我们今天要部署的Distill版本，是在阿里的QWEN千问和META的LLAMA基础上再训练实现的蒸馏版本 （btw，满血版的deepseek-R1基于deepseek-v3再训练实现，具有671B参数，理论上起码需要350G以上显存才能够部署） 一般来说，8G显存可以部署8B级别模型；24G显存可以刚好适配到32B的模型，请根据自身电脑硬件配置来选择合适的模型版本 下载模型根据显存大小，我选择下载8B参数的量化模型： 如果想下载其他参数量的，只需要将8B修改为新的参数值 如选择 32B 版本，则改为ollama run deepseek-r1:32b 耐心的等待下载即可 开始对话使用如下命令启动DeepSeek： 即可与DeepSeek对话： 可以看到显存只用了6GB 对于MacOS用户，大同小异 M1的GPU基本被4060按在地上摩擦🤣（不过最近看很多youtuber使用MacMiniM4组成的集群跑LLM，效果也不错） 进阶使用部署Open webUI如果你认为命令行过于简陋，可以尝试部署Open WebUI框架来引入更简明的交互界面 1.安装Docker 我们进入docker 官网，根据自己电脑的操作系统下载对应的版本的DockerDesktop 下载完成后，你可能会被提醒需要更新子系统，因为服务器在海外，请使用科学上网的方法更换节点 完成更新后打开DockerDesktop 点击右下角Terminal，输入下面命令，然后等待安装完成 因为GFW正式DNS污染+SNI阻断了docker.com及其相关域名，你仍然需要确保自己是在科学上网的环境 这一步耗时很久，需耐心等待 可以看到我们已经pull了open webui 我们之前已经将本机的端口3000映射到容器内的端口8080，这意味着可以通过访问 来访问运行在容器内的服务 根据提示完成初始化 完成后可以选择已经pull到本地的模型 我觉得它很蠢 可以同时运行多个模型，换deepseek试试，听说它使用了弱智吧的数据集 同时运行多个模型，风扇拼尽全力无法战胜 我的处理器是臭名昭著的13代酷睿，需要手动在BIOS中关闭E核避免调度问题 CPU满载的情况还是第一次见🤔 好吧DeepSeek也没聪明到哪去，这还是14b的版本 以上 题外话哎呦卧槽太有节目效果了 刚刚发现我的chatGPT账号和Claude账号都被封了 我明明上午还在用的啊 chatGPT账号注册一年多了快？每个月都冲plus会员，和Claude账号一样都绑定了Google账户，梯子的节点也干净 我没话说🤷 结语希望这篇文章对你有帮助，任何疑问可以通过strtus@outlook.com与我联络 enjoy😉 ! "},{"title":"色彩科学的数学原理_4.李群方法推导Rodrigues公式","date":"2025-01-30T15:56:36.000Z","url":"/2025/01/30/%E8%89%B2%E5%BD%A9%E7%A7%91%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86_4.%E6%9D%8E%E7%BE%A4%E6%96%B9%E6%B3%95%E6%8E%A8%E5%AF%BCRodrigues%E5%85%AC%E5%BC%8F/","tags":[["色彩科学","/tags/%E8%89%B2%E5%BD%A9%E7%A7%91%E5%AD%A6/"]],"categories":[[" ",""]],"content":"旋转矩阵的无穷小变换首先，从旋转矩阵入手，设旋转角度为 $\\delta \\alpha$ 时，旋转矩阵的变化量为： $$\\delta \\boldsymbol{r} &#x3D; \\boldsymbol{n} \\times \\boldsymbol{r} , \\delta \\alpha$$ 旋转矩阵的变化量可以表示为： $$\\boldsymbol{R}(\\boldsymbol{n}, \\delta \\alpha) &#x3D; \\boldsymbol{I} + \\delta \\alpha \\begin{bmatrix} 0 &amp; -n_z &amp; n_y \\ n_z &amp; 0 &amp; -n_x \\ -n_y &amp; n_x &amp; 0 \\end{bmatrix}$$ 其中，$\\boldsymbol{I}$ 是单位矩阵，$\\boldsymbol{\\Omega} &#x3D; \\begin{bmatrix} 0 &amp; -n_z &amp; n_y \\ n_z &amp; 0 &amp; -n_x \\ -n_y &amp; n_x &amp; 0 \\end{bmatrix}$ 是反对称矩阵。 旋转矩阵的指数映射旋转矩阵的最终表达式可以通过无穷小旋转的指数映射来表示。对于有限旋转角度 $\\alpha$，可以将其分解为无穷次无穷小旋转的连续作用： $$\\boldsymbol{R}(\\boldsymbol{n}, \\alpha) &#x3D; \\lim_{N \\to \\infty} \\left( \\boldsymbol{I} + \\frac{\\alpha}{N} \\boldsymbol{\\Omega} \\right)^N &#x3D; e^{\\alpha \\boldsymbol{\\Omega}}$$ 通过指数映射，可以得到旋转矩阵 $\\boldsymbol{R}(\\boldsymbol{n}, \\alpha)$。 计算矩阵指数通过矩阵的幂级数展开： $$e^{\\alpha \\boldsymbol{\\Omega}} &#x3D; \\sum_{k&#x3D;0}^{\\infty} \\frac{(\\alpha \\boldsymbol{\\Omega})^k}{k!}$$ 由于 $\\boldsymbol{\\Omega}$ 是一个反对称矩阵，并且满足 $\\boldsymbol{\\Omega}^3 &#x3D; -\\boldsymbol{\\Omega}$，可以通过分解 $\\boldsymbol{\\Omega}$ 的幂次来简化计算 $$\\boldsymbol{\\Omega}^{2k} &#x3D; (-1)^{k-1} \\boldsymbol{\\Omega}^2, \\quad \\boldsymbol{\\Omega}^{2k+1} &#x3D; (-1)^k \\boldsymbol{\\Omega}$$ 矩阵指数展开式可以写为： $$e^{\\alpha \\boldsymbol{\\Omega}} &#x3D; \\boldsymbol{I} + \\boldsymbol{\\Omega} \\sin \\alpha + \\boldsymbol{\\Omega}^2 (1 - \\cos \\alpha)$$ 结合 $\\boldsymbol{\\Omega}^2$ 的表达式由于 $\\boldsymbol{\\Omega}^2 &#x3D; \\boldsymbol{n} \\boldsymbol{n}^T - \\boldsymbol{I}$，将其代入矩阵指数的展开式中，得到： $$e^{\\alpha \\boldsymbol{\\Omega}} &#x3D; \\boldsymbol{I} + (\\boldsymbol{n} \\boldsymbol{n}^T - \\boldsymbol{I}) (1 - \\cos \\alpha) + \\boldsymbol{\\Omega} \\sin \\alpha$$ 得到最终的 Rodrigues 旋转公式： $$\\boldsymbol{R}(\\boldsymbol{n}, \\alpha) &#x3D; \\boldsymbol{I} \\cos \\alpha + (1 - \\cos \\alpha) \\boldsymbol{n} \\boldsymbol{n}^T + \\sin \\alpha \\begin{bmatrix} 0 &amp; -n_z &amp; n_y \\ n_z &amp; 0 &amp; -n_x \\ -n_y &amp; n_x &amp; 0 \\end{bmatrix}$$"},{"title":"色彩科学中的数学原理_3.Planckian locus的绘制方法","date":"2025-01-26T15:01:53.000Z","url":"/2025/01/26/%E8%89%B2%E5%BD%A9%E7%A7%91%E5%AD%A6%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86_3.Planckian%20locus%E7%9A%84%E7%BB%98%E5%88%B6%E6%96%B9%E6%B3%95/","tags":[["色彩科学","/tags/%E8%89%B2%E5%BD%A9%E7%A7%91%E5%AD%A6/"]],"categories":[[" ",""]],"content":"前言在上一章节中，基于前述辐射度量学与光度学的基础，讨论了如何通过实验数据构建色域马蹄图 本章节介绍Planckian locus的绘制方法，并由此引出相关色温的概念，这是三刺激值计算的典型案例 Planckian locus与色温黑体辐射的辐亮度分布函数为： $$\\mathcal{L}\\left(\\lambda; T\\right) &#x3D; \\frac{2hc^2}{\\lambda^5}\\frac{1}{\\mathrm{e}^{\\frac{hc}{\\lambda kT}}-1}$$ 通过积分计算三刺激值后，得到色度坐标随温度$T$变化的轨迹——Planckian locus。 相关色温（CCT）定义为色度坐标最接近Planckian locus点的温度值。 相关色温对于自然界中的许多光源，其色度坐标并不完全落在Planckian locus上，但可以通过计算其与Planckian locus的最近点来确定其相关色温（CCT）。相关色温广泛应用于摄影、照明等领域，用于描述光源的颜色特性。 均匀颜色空间虽然CIE 1931 xy色度图能够直观地表示颜色的色相和饱和度，但其上的欧式距离并不能很好地反映人眼对颜色差异的感知。为了解决这一问题，研究者提出了均匀颜色空间的概念，例如CIE 1976 UCS（Uniform Chromaticity Scale）图。在均匀颜色空间中，颜色的差异与人眼的感知更加一致。 "},{"title":"利用HEXO+GithubPages搭建自己的静态博客","date":"2025-01-23T11:48:11.000Z","url":"/how2build.html","tags":[["教程","/tags/%E6%95%99%E7%A8%8B/"]],"categories":[[" ",""]],"content":"前言准备趁着这个寒假系统的学习一下色彩科学和计算机图形学，这样有助于我更好的调色 为了记录和分享我新学到的知识，搭建一个知识博客是有必要的，知识分享类博客侧重体系的构建，所以它应该对Markdown与$\\LaTeX$有很好的原生支持，这样有助于我把Obsidian中的知识库迁移过来，而且它应该足够轻量，易于分发与备份 (我可不希望它像wordpress那样数据库冗杂且备份文件经常无法恢复以至于我换了个云服务供应商就丢失了写了八年的博客😭） 基于上述考量，在尝试了HEXO，Gridea，Typecho这几个主流的博客平台后，我选择了基于 Node.js框架的Hexo，作为一款静态博客框架，HEXO能够将网站内容预先渲染为 HTML 文件，这与传统的动态博客不同，后者依赖于数据库和服务器端脚本来动态渲染，由于内容以静态文件形式存储和分发，所以它可以加载的更快，且可以很便捷的git到GitHub Pages 等托管服务 这篇文章记录了我搭建这套博客的过程，如果你也想拥有一套自己的博客系统，希望它能够帮到你😉 需要声明的是，我是在macOS上搭建的，不过对于Win来说大同小异 ok那我们开始吧 准备工作注册GitHub 账号我们需要把生成的html文件git到Repository中，你需要前往GitHub官网注册一个自己的账号 安装 Git请提前部署好git环境 部署Node.js环境去官网下载即可，不再赘述 下载完成后在Terminal中输入以下命令检测版本确保安装成功 你应该会得到类似 这样的output 域名购买（非必要)通过国内的云服务供应商购买域名会更便宜，但需要备案，我个人用的是腾讯云 选择国外的供应商则无需备案，比如Cloudflare 确保自己拥有良好的科学上网环境我们需要访问github的服务器，而这个过程需要绕过一堵无形的墙，u know 方法不再赘述，八仙过海各显神通 比如你甚至可以通过修改hosts来突破DNS污染） 安装HEXO1.在本地创建安装目录，比如这是我的目录： 如果你和我一样把HEXO框架安装在了iCloud&#x2F;OneDrive的同步文件夹下，请记得勾选“保留下载&#x2F;始终保留在此设备” 2.通过cd命令切换到该目录： 3.通过npm安装hexo： 如果你和我得到了类似的output： 这是由于当前用户没有权限在 /usr/local/lib/node_modules 目录下安装全局的npm包，如果不希望在系统目录下安装 npm 包，可以将 npm 的全局安装路径修改为你自己用户目录下的某个位置 1.首先，创建一个目录来存放全局安装的 npm 包： 2.告诉 npm 使用这个新目录来安装全局包： 3.编辑 .bash_profile 或 .zshrc 文件，加入以下内容： 4.重新加载配置文件： 5.再次运行安装命令 如图： 在我们选定的安装目录下可以看到Hexo CLI： 安装完成后，初始化我们的博客，输入： 不出意外的话这个时候又要出意外了 看报错信息，提示需要在 Hexo 项目的根目录下运行 npm install 来安装项目所需的依赖包 之前只是安装了 Hexo CLI，现在需要安装 Hexo 的依赖项 那么，按照它的提示👇 使用npm install命令根据 package.json 文件中的配置安装所有必需的依赖包 呐，屁用没有🤷 根据报错信息，npm 缓存目录（/Users/sqren/.npm）中包含了由 root 用户拥有的文件，这是因为之前我使用 sudo 安装过 npm 包 现在我们需要将 /Users/sqren/.npm 目录的所有权更改为当前用户： 检查当前用户的名称和对应的用户组： 会看到如下output： 其中： uid=501(sqren) 表示当前用户是 sqren。 gid=20(staff) 表示当前用户的用户组是 staff。 修正 chown 命令： 把 .npm 目录及其所有内容的所有权更改为 sqren 用户和 staff 组。 清空 npm 缓存以防出现奇奇怪怪的问题 接下来就可以愉快的npm install了😋 安装完成后运行如下命令初始化HEXO： 启动HEXO本地服务 如图 浏览器访问  能进来这个页面就说明安装成功了 配置HEXO配置主题cd到themes目录 直接git clone😋 随后修改_config.yml文件中的theme键值为当前主题名称： （Hexo 有2种 _config.yml文件，一个是根目录下的全局的 _config.yml，一个是各个 theme 下的 _config.yml。前者称为站点配置文件， 后者称为主题配置文件，这里我们修改的是站点配置文件） 重启本地serve，在浏览器中可以看到主题已经完成了更换 安装插件如若需要安装插件，请使用如下命令： 这里以katex为例 撰写新文章1.cd到HEXO目录 使用new命令来新建一个带有front-matter的.md文件 随后你可以在posts目录下打开此文档 2.撰写完文章后使用如下命令清除缓存： 3.生成html文件 4.git 5.启动本地预览服务，即可在浏览器中访问 使用Hexo deploy 部署到github建立RepositoryRepository的命名格式应该为&lt;github用户名&gt;.github.io 配置SSH1.在仓库中获取SSH链接 2.在站点配置文件_config.yml中修改deplog的键值： 3.安装Git部署插件 4.配置SSH-Key 如图👇： 添加生成的SSH key到ssh-agent： 复制key，然后回到Github，进入路径user/Settings/Access/SSH and GPG keys Add new SSH key 测试添加ssh是否成功 如果看到Hi后面是你的用户名，就说明成功了 此时已经可以git到Repository中了 现在我们可以通过github分配的域名访问自己的静态博客： 域名解析ping一下，延迟还不错，也不丢包（因为我开着魔法呢hhh 记住这里的ipv4地址 进入DNS解析管理页面： A类解析到ip地址 CNAME解析到github的域名 前往Repository 在Steeings/page中，输入你的domain 如果DNS check状态为successful，则会在repository生成一份CNAME文件，里面是你的domain 请将文件下载至你的本地仓库中的source文件夹，否则每次git后，会覆盖掉repository中的CNAME文件，则域名无法解析到github.io 现在，你可以愉快的写博客了 本地的markdown编辑器推荐使用Obsidian或Typora，它们都对Latex有很好的支持 结语希望这篇文章对你有帮助，任何疑问可以通过strtus@outlook.com与我联络 enjoy😉 ! "},{"title":"色彩科学的数学原理_2.Trichromatic Theory & Grassmann's Law","date":"2025-01-22T15:56:24.000Z","url":"/2025/01/22/%E8%89%B2%E5%BD%A9%E7%A7%91%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86_2.Trichromatic%20Theory%20&%20Grassmann's%20Law/","tags":[["色彩科学","/tags/%E8%89%B2%E5%BD%A9%E7%A7%91%E5%AD%A6/"]],"categories":[[" ",""]],"content":" 本文还在编辑中 前言辐射度量学和光度学为颜色的定量描述奠定了理论框架，本篇文章将围绕Trichromacy理论、色光混合实验和Grassmann’s law对色度学做进一步深入的讨论，进而阐述色彩空间的数学结构 Trichromatic Theory 与颜色匹配实验学过大雾后我们会知道，颜色并不是物体本身所具备的固有属性，而是光线在特定波长下的反射或发射所引起的视觉反应。这种视觉反应通过眼睛中的视锥细胞( cone cell )捕捉，并由大脑进行解读，最终呈现为我们所感知到的颜色。 三色刺激值人类眼睛有对于短（420-440nm）、中（530-540nm）和长（560-580nm）波长的光感受器。根据三种视锥细胞的刺激比例，便能描述任一种颜色的感觉，此称为LMS空间 牛顿色散实验1666年，英国科学家艾萨克·牛顿通过实验揭示了光的色散现象。在其经典的色散实验中，牛顿将白光通过三棱镜分解为七种颜色（红、橙、黄、绿、蓝、靛、紫）。牛顿进一步实验发现，单一颜色的光无法被再度分解，得出了白光是由多种单色光混合而成的结论。 通过这些实验，牛顿首次证明了白光的复合性，并推测了在可见光谱外的颜色，如品红色和紫红色。 Trichromatic Theory在牛顿色散实验的基础上，法国物理学家Mariotte提出了Trichromatic Theory ，认为只需要三种基本色光即可混合产生所有颜色。这个理论经过Thomas Young和Hermann von Helmholtz的进一步完善，最终形成了Young–Helmholtz theory。 该理论提出，人眼的视网膜上存在三种不同类型的感光细胞，分别对红、绿、蓝光最为敏感。 基于这一生理学发现，科学家们通过实验验证了人眼对于颜色的感知依赖于三种光的混合。这三种光被称为三基色，分别为红（R）、绿（G）和蓝（B）。 在现代的生理学中，这三种色光的感知分别对应于L-视锥细胞、M-视锥细胞和S-视锥细胞。 颜色匹配实验与颜色匹配函数基于Trichromatic Theory ，科学家进一步发展了颜色匹配实验，以验证通过三基色混合可以再现所有颜色。在这些实验中，研究人员使用色光匹配的方式，测量并记录了不同颜色下三基色的亮度比值。这些实验结果被表示为颜色匹配函数，它们定义了不同波长光在三基色光源下的组合比例。1931年，CIE（国际照明委员会）通过结合Wright和Guild的实验数据，提出了标准的三基色（红光：700 nm、绿光：546.1 nm、蓝光：435.8 nm）。 下图展示了Wright和Guild的颜色匹配实验数据： Grassmann’s lawGrassmann’s law是描述色光混合的基本定律之一，它不仅是色度学中的基础理论，也是计算机图形学、色彩管理系统等领域中的核心原理。Grassmann’s law由四个核心命题构成，描述了色光混合过程中的亮度加法和色相、饱和度的恒定性。 色相、饱和度与亮度的数学定义首先我们明确一下颜色的三要素：色相（hue）、饱和度（saturation）和亮度（luminance）。 色相（hue） 表示颜色的基本类型，可以理解为颜色的角度。 饱和度（saturation） 表示颜色的纯度，饱和度越高，颜色越纯。 亮度（luminance） 表示颜色的亮度强度，即颜色的明暗程度。 设两个色光 ( C_1 ) 和 ( $C_2$ ) 的亮度分别为 ( $L_1 $ ) 和 ( $L_2 $ )，色相为 ( H_1 ) 和 ( H_2 )，饱和度为 ( $S_1 $) 和 ( $S_2$ )。在Grassmann’s law的框架下，混合后的颜色 ( $C_{\\text{mix}} $) 的亮度 ( $L_{\\text{mix}} $)、色相 ( $H_{\\text{mix}}$ ) 和饱和度 ( $S_{\\text{mix}}$ ) 满足以下关系： 亮度加法定律：$$L_{\\text{mix}} &#x3D; L_1 + L_2$$ 色相与饱和度恒定：$$H_{\\text{mix}} &#x3D; H_1 &#x3D; H_2$$ $$S_{\\text{mix}} &#x3D; S_1 &#x3D; S_2$$ 这表明，Grassmann’s law假定在混合过程中，色相和饱和度是恒定的，只有亮度发生变化。 亮度加法定律的数学推导为了从数学上推导亮度加法定律，我们首先假设光的亮度 ($L $) 是光谱功率分布$SPD$ ($P(\\lambda) $ 与人眼感光曲线 $ \\overline{V}(\\lambda) $ 的加权积分。假设有两种色光 ($ C_1 $) 和 ($C_2$)，它们的亮度分别为 ($L_1 $) 和 ($L_2 $)，则：$$L_1 &#x3D; \\int_{\\lambda} P_1(\\lambda) \\overline{V}(\\lambda) , d\\lambda$$ $$L_2 &#x3D; \\int_{\\lambda} P_2(\\lambda) \\overline{V}(\\lambda) , d\\lambda$$ 在Grassmann’s law下，混合后的亮度 ( $L_{\\text{mix}} $ ) 是两个色光亮度之和： $$L_{\\text{mix}} &#x3D; L_1 + L_2 &#x3D; \\int_{\\lambda} \\left( P_1(\\lambda) + P_2(\\lambda) \\right) \\overline{V}(\\lambda) , d\\lambda$$ 这表明，亮度加法是光谱响应和视觉响应的线性组合。 色光混合的线性加法性质Grassmann’s law不仅仅描述了亮度的加法，也揭示了颜色混合过程的线性性质。假设有两个色光 ( $C_1 &#x3D; \\left( a_R [\\mathrm{R}] + a_G [\\mathrm{G}] + a_B [\\mathrm{B}] \\right) $) 和 ( $C_2 &#x3D; \\left( b_R [\\mathrm{R}] + b_G [\\mathrm{G}] + b_B [\\mathrm{B}] \\right) $)，其混合后的结果 ($ C_{\\text{mix}} $) 可通过加法得到： $$C_{\\text{mix}} &#x3D; C_1 + C_2 &#x3D; \\left( a_R + b_R \\right) [\\mathrm{R}] + \\left( a_G + b_G \\right) [\\mathrm{G}] + \\left( a_B + b_B \\right) [\\mathrm{B}]$$ 从数学上看，颜色的加法就是三个基色 ( $[\\mathrm{R}]$ )、( $[\\mathrm{G}] $ )、( $[\\mathrm{B}] $) 的线性组合。这种线性加法性质说明了色彩空间的线性结构，且颜色的合成是无穷维空间中的线性变换。 负值和色彩空间的对偶性质在色光混合实验中，我们会遇到某些情况下基色的系数为负数。这意味着，在某些条件下，参考域中必须“减去”某些色光分量才能匹配目标色光。这种现象对应着色彩空间的对偶性，具体表现为： $$C_{\\text{ref}} &#x3D; C_{\\text{target}} - \\left( a_R [\\mathrm{R}] + a_G [\\mathrm{G}] + a_B [\\mathrm{B}] \\right)$$ 这种负值是色光混合实验中的一项数学特征，它表明色光的混合不仅仅是正向合成，还可以通过某些特定方式进行负向补偿。 色彩空间的线性结构色彩空间是一个描述颜色的多维数学空间，其中每个颜色都可以表示为基色的线性组合。通过线性空间的理论，我们可以对色彩空间进行深入分析，理解其数学结构。 色彩空间的定义与基色设定色彩空间 ( $\\mathscr{C} $) 为三维空间，且其基底由三个基色 ( $[\\mathrm{R}]$ )、( $[\\mathrm{G}]$ )、( $[\\mathrm{B}] $) 构成。任意颜色 ( $C$ ) 都可以表示为这三个基色的线性组合： $$C &#x3D; a_R [\\mathrm{R}] + a_G [\\mathrm{G}] + a_B [\\mathrm{B}]$$ 其中，( $a_R$ )、($ a_G$ )、( $a_B$ ) 是标量，分别表示颜色 ( $C $ ) 在三基色上的分量。这些分量确定了颜色的色相、饱和度和亮度。 色彩空间的线性运算在色彩空间中，颜色的加法和数乘操作是封闭的，这意味着： 加法运算：若 ( $C_1$ ) 和 ( $C_2$ ) 分别表示为： $$C_1 &#x3D; a_R [\\mathrm{R}] + a_G [\\mathrm{G}] + a_B [\\mathrm{B}]$$ $$C_2 &#x3D; b_R [\\mathrm{R}] + b_G [\\mathrm{G}] + b_B [\\mathrm{B}]$$ 则它们的加法结果是： $$C_{\\text{mix}} &#x3D; C_1 + C_2 &#x3D; (a_R + b_R) [\\mathrm{R}] + (a_G + b_G) [\\mathrm{G}] + (a_B + b_B) [\\mathrm{B}]$$ 数乘运算：若 ( $C$ ) 表示颜色，且标量 ( $k$ ) 为一个实数，则数乘结果为： $$k C &#x3D; k \\cdot \\left( a_R [\\mathrm{R}] + a_G [\\mathrm{G}] + a_B [\\mathrm{B}] \\right) &#x3D; (k a_R) [\\mathrm{R}] + (k a_G) [\\mathrm{G}] + (k a_B) [\\mathrm{B}]$$ 色彩空间的亮度与色度分离在色彩空间中，我们可以将亮度和色度分离。假设亮度 ( $L$ ) 是颜色的加权平均值，而色度 ( $\\theta $ ) 表示色光的混合比例。则，色彩空间中的每个点都可以通过亮度和色度来描述： $$C &#x3D; L \\cdot \\theta$$ 其中，( $L $ ) 为颜色的亮度，( $\\theta$ ) 为颜色的色度分量。通过这种方式，色彩空间中的颜色可以被分解为亮度和色度的乘积，从而实现色彩的亮度与色度的独立控制。 Reference 三色视者与四色视者身后的理论基础:色彩原理-周陆军的文章 - 知乎 Wikipedia contributors, “CIE 1931 color space,” Wikipedia, The Free Encyclopedia,  (accessed January 22, 2025). Malacara A D. Color Vision and Colorimetry: Theory and Applications, Second Edition. 2011. The Trichromatic Theory Of Color Vision Trichromatic Theory of Color Vision | Overview &amp; Definition Fairman H S, Brill M H, Hemmendinger H. How the CIE 1931 color‐matching functions were derived from Wright‐Guild data [J]. Color Research &amp; Application, 1997, 22(1):11-23. The First Book of Opticks. Part II (1704) CIE (1931) color space "},{"title":"色彩科学的数学原理_1.辐射度量学与光度学","date":"2025-01-22T14:00:21.000Z","url":"/2025/01/22/%E8%89%B2%E5%BD%A9%E7%A7%91%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86-1-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6%E4%B8%8E%E5%85%89%E5%BA%A6%E5%AD%A6/","tags":[["色彩科学","/tags/%E8%89%B2%E5%BD%A9%E7%A7%91%E5%AD%A6/"]],"categories":[[" ",""]],"content":"前言为了系统探讨色度学原理，首先需了解“什么是光？”以及“人眼如何对光产生视觉感知？” 有鉴于此，本文从电磁学与光学和视觉生理学的角度出发，对辐射度量学与光度学做简要阐述。这两大学科共同构成了量化光与色觉的基础框架。鉴于色彩理论所涉及之范畴极其广泛，本文仅聚焦辐射度量学和光度学的核心概念，为后续“颜色匹配实验”“三基色理论”“CIE 1931 XYZ 色度图”等内容奠定基础。 本文的前置基知识为：微积分、矩阵理论 辐射度量学与光度学基础辐射度量学与光度学简介辐射度量学（radiometry）主要研究电磁辐射的能量度量与分布规律。电磁辐射涵盖极宽广的波长范围，包括伽马射线、X 射线、紫外光、可见光、红外光、微波与无线电波等。然而，人眼仅能对其中约 390–780 nm 的波段产生视觉感受，故可见光只占整个电磁波谱的极小部分。 光度学（photometry）则侧重研究可见光对人眼视觉系统所带来的主观亮度刺激，因为虽然同为可见光，不同波长对于人眼的刺激也是不同的。 大量实验证明，人眼对 555 $nm$ 单色光（黄绿色）最敏感，若在该波长定义其视觉响应系数为 1，则其他波长光的视见效率可用函数 ($V(\\lambda)$)来表征。 在将物理辐射量换算成人眼主观亮度的过程中，视见函数起到了加权的作用，某种意义上，视见函数构建了联结光度学和辐射度量学的桥梁。 辐射度量学的基本概念为便于后续建模，引入如下概念 **辐射通量($\\varPhi_\\mathrm{R}$) **表示单位时间内穿过某截面的电磁辐射能量，单位为瓦（$W$）：$$\\varPhi_\\mathrm{R} &#x3D; \\frac{\\mathrm{d}Q}{\\mathrm{d}t}$$其中 ($Q$) 代表辐射能量，($t$)为时间。 辐射强度 ($I$)对点状辐射源而言，为在给定方向(单位立体角)上的辐射通量密度，单位为 ($\\mathrm{W&#x2F;sr}$)：$$I &#x3D; \\frac{\\mathrm{d}\\varPhi_\\mathrm{R}}{\\mathrm{d}\\varOmega}$$ 辐照度 ($E$)当研究辐射能量如何“照射”到表面时，就引入辐照度：$$E &#x3D; \\frac{\\mathrm{d}\\varPhi_\\mathrm{R}}{\\mathrm{d}A}$$其单位为 ($\\mathrm{W&#x2F;m^2}$)。 辐亮度 ($L$)指某表面微元在特定方向的出射辐射强度与其面积正交分量之比：$$L &#x3D; \\frac{\\mathrm{d}I}{\\mathrm{d}A^\\perp}&#x3D; \\frac{\\mathrm{d}^2\\varPhi_\\mathrm{R}}{\\mathrm{d}\\varOmega ,\\mathrm{d}A \\cos\\theta}$$在无能量损耗的理想条件下，沿光线传播方向，辐亮度恒定不变。这一性质常用于图形学渲染算法中的光能传递计算。 注：更深层次地，辐射度量学可追溯至麦克斯韦电磁学原理，将电磁场视为矢量场来分析。但在此处，我们采取几何光学近似，侧重能量“射线”形式即可满足后续色彩模型应用。 光度学的基本概念为便于后续建模，引入如下概念 光通量 ($\\varPhi_\\mathrm{V}$)若某光源在波长 ($\\lambda$) 上辐射通量分布为 ($\\phi_\\mathrm{R}(\\lambda)$)，则其光度学加权形式：$$\\phi_\\mathrm{V}(\\lambda) &#x3D; \\sigma_\\mathrm{m} , V(\\lambda), \\phi_\\mathrm{R}(\\lambda)$$积分得总光通量：$$\\varPhi_\\mathrm{V} &#x3D;\\int_0^\\infty\\sigma_\\mathrm{m},V(\\lambda),\\phi_\\mathrm{R}(\\lambda),\\mathrm{d}\\lambda$$其中 ($\\sigma_\\mathrm{m}\\approx 683,[\\mathrm{lm&#x2F;W}]$)，常称“最大光谱光视效率”系数。 发光强度 ($I_\\mathrm{V}$)对应点光源在单位立体角内的光通量，单位为坎德拉($cd$)。若光源辐射555 nm波长光，功率强度为 ($\\tfrac{1}{683},\\mathrm{W&#x2F;sr}$)，则发光强度为 1 $cd$。 光照度 ($E_\\mathrm{V}$)表示照射在单位面积上的光通量，单位勒克斯($lx$)：$$E_\\mathrm{V} &#x3D; \\frac{\\mathrm{d}\\varPhi_\\mathrm{V}}{\\mathrm{d}A}$$ 光亮度 ($L_\\mathrm{V}$)在光度学中，定义与辐亮度平行，只是换成光度学加权：$$L_\\mathrm{V}&#x3D; \\frac{\\mathrm{d}I_\\mathrm{V}}{\\mathrm{d}A^\\perp}&#x3D; \\frac{\\mathrm{d}^2 \\varPhi_\\mathrm{V}}{\\mathrm{d}\\varOmega,\\mathrm{d}A \\cos\\theta}$$单位为 $cd&#x2F;m²$（通常亦称 $nit$）。这在显示器规格中常被提及，例如“500 $nit$”亮度。 Reference 颜色的数学理论I——辐射度量学与光度学基础 - 缺心眼的香菜的文章 - 知乎  Griffiths, David J. Introduction to electrodynamics 3. ed., reprint. with corr. Upper Saddle River, NJ [u.a.]: Prentice-Hall. 1999 [2012-04-06]. ISBN 0-13-805326-X. 维基百科, 自由的百科全书, s.v. “輻照度” (by Wikipedia contributors),  (accessed July 25, 2022). Wikipedia contributors, “Luminous efficiency function,” Wikipedia, The Free Encyclopedia,  (accessed January 22, 2025). CIE. Commission Internationale de l’Éclairage. Colorimetry (CIE 15:2004). Vienna: CIE Central Bureau, 2004. Malacara A. D. Color Vision and Colorimetry: Theory and Applications, Second Edition. SPIE Press, 2011. Marschner S, Shirley P, Ashikhmin M, et al. Fundamentals of Computer Graphics. CRC Press, 2018. "},{"title":"About","date":"2025-01-21T16:18:49.000Z","url":"/about.html","categories":[[" ",""]],"content":"hi👋，我是Strtus 这里是我的知识博客，它独立于个人博客：myblogrsq.cn，我会在这里分享我的学习收获以及见解 这是我第一次搭建纯静态页面，无需经过服务器的编译，可以直接在浏览器上渲染，使用了基于Node.js技术栈的HEXO框架，目前部署于Github Pages上，由Vercel托管并自动从仓库拉取代码进行发布，它足够轻量且很好的支持了markdown和$\\LaTeX$语法 关于我的更多信息，你可以访问这里👇"},{"title":"tags","date":"2025-01-21T16:27:36.000Z","url":"/tags/index.html","categories":[[" ",""]]},{"title":"search","date":"2025-01-21T16:29:18.000Z","url":"/search/index.html","categories":[[" ",""]]},{"title":"page","date":"2025-01-21T16:52:37.000Z","url":"/page/index.html","categories":[[" ",""]]}]